
comparative study among CSV, feather, pickle, and parquet, where the time performance for loading, saving, and loading+saving data was assessed. Also, the data storage consumed for each one was reported. In addition, a comparative study of using non-optimized vs. optimized DataFrames was detailed.
Based on the results, the questions posed in the introduction can be answered as follows:
On the one hand, the file format obtaining the best time performance for loading data in non-optimized DataFrames is Parquet, while Pickle presents the best time performance for optimized DataFrames. On the other hand, the file format obtaining the best time performance for saving data in non-optimized DataFrames is Feather, while Pickle presents the best time performance for optimized DataFrames. However, for the combination of loading + saving data, the file format obtaining the best time performance in non-optimized DataFrames is Feather, while Pickle presents the best time performance for optimized DataFrames. 
Regarding the data storage, Parquet is the file format consuming less space by using non-optimized DataFrames, while for optimized DataFrames, there are different results regarding the range of records. From 7K to 3M records, the battle for the top-1 is between Parquet and Feather. On the other hand, from 3 to 5 million records, Parquet shows the best performance while Feather shows similar behavior.
The RAM usage is the same regardless of the format file. However, using optimized DataFrames permanently saves RAM. For example, for 5 million records, optimized DataFrames can save about 60% of RAM usage relative to non-optimized DataFrames.
There is no one winning file format for all measured metrics. However, some recommendations can be stated based on the results: Feather, Parquet, and Pickel -in that order- are the best options for non-optimized DataFrames. While Pickle, Feather, and Parquet -in that order- are the best options for optimized DataFrames.